<!-- Skin CSS file -->
<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.8.0r4/build/assets/skins/sam/skin.css">
<!-- Utility Dependencies -->
<script src="http://yui.yahooapis.com/2.8.0r4/build/yahoo-dom-event/yahoo-dom-event.js"></script> 
<script src="http://yui.yahooapis.com/2.8.0r4/build/element/element-min.js"></script> 
<!-- Needed for Menus, Buttons and Overlays used in the Toolbar -->
<script src="http://yui.yahooapis.com/2.8.0r4/build/container/container_core-min.js"></script>
<script src="http://yui.yahooapis.com/2.8.0r4/build/menu/menu-min.js"></script>
<script src="http://yui.yahooapis.com/2.8.0r4/build/button/button-min.js"></script>


<!-- Source file for Rich Text Editor-->
<script src="http://yui.yahooapis.com/2.8.0r4/build/editor/editor-min.js"></script>

<script type="text/javascript">
	(function() {
    //Some private vars
    var Dom = YAHOO.util.Dom,
        Event = YAHOO.util.Event;

    YAHOO.gutter = function() {
        return {
            //The current status of the gutter (true is open)
            status: false,
            //Placeholder for the Overlay control
            gutter: null,
            /*
            * This method will create the Overlay and
            * attach some animations to the show and hide events
            */
            createGutter: function() {
                //Creating the Overlay
                this.gutter = new YAHOO.widget.Overlay('gutter1', {
                    height: '425px',
                    width: '300px',
                    //Setting it the context of the Editor's container
                    context: [
                        editor.get('element'),
                        'tl',
                        'tr'
                    ],
                    //Set the position
                    position: 'absolute',
                    //Hide by default
                    visible: false
                });
                /*
                * The hideEvent will control the status of the toolbar button as well
                * as fire the animation off to close the gutter
                */
                this.gutter.hideEvent.subscribe(function() {
                    //Deselect the flickr button in the toolbar
                    editor.toolbar.deselectButton('flickr');
                    Dom.setStyle('gutter1', 'visibility', 'visible');                
                    var anim = new YAHOO.util.Anim('gutter1', {
                        width: {
                            from: 300,
                            to: 0
                        },
                        opacity: {
                            from: 1,
                            to: 0
                        }
                    }, 1);
                    //When the animation is done, hide the element.
                    anim.onComplete.subscribe(function() {  
                        Dom.setStyle('gutter1', 'visibility', 'hidden');
                    });
                    //Animate it
                    anim.animate();
                }, this, true);
                /*
                * The showEvent will control the status of the toolbar button as well
                * as fire the animation off to open the gutter
                */
                this.gutter.showEvent.subscribe(function() {
                    //Select the flickr button in the toolbar
                    editor.toolbar.selectButton('flickr');
                    //Set the context of the panel (in case it was lost in the animation)
                    this.gutter.cfg.setProperty('context',[
                        editor.get('element'),
                        'tl',
                        'tr'
                    ]);
                    //Set the width to 0 pixels.
                    Dom.setStyle(this.gutter.element, 'width', '0px');
                    var anim = new YAHOO.util.Anim('gutter1', {
                        width: {
                            from: 0,
                            to: 300
                        },
                        opacity: {
                            from: 0,
                            to: 1
                        }
                    }, 1);
                    //Animate it
                    anim.animate();
                }, this, true);

                var warn = '';
                //Check if we are using Safari or Opera, if we are show the warning that you can't drag and drop images
                if (editor.browser.webkit || editor.browser.opera) {
                    warn = editor.STR_IMAGE_COPY;
                }
                //Set the body of the gutter to hold the HTML needed to render the autocomplete
                this.gutter.setBody('<h2>Flickr Image Search</h2><label for="flikr_search">Tag:</label>' +
                    '<input type="text" value="" id="flickr_search"><div id="flickr_results">' + 
                    '<p>Enter flickr tags into the box above, separated by commas. Be patient, ' + 
                    'this example may take a few seconds to get the images.<p></div>' + warn);
                this.gutter.render(document.body);
            },
            /*
            * Open the gutter using Overlay's show method
            */
            open: function() {
                Dom.get('flickr_search').value = '';
                this.gutter.show();
                this.status = true;
            },
            /*
            * Close the gutter using Overlay's close method
            */
            close: function() {
                this.gutter.hide();
                this.status = false;
            },
            /*
            * Check the state of the gutter and close it if it's open
            * or open it if it's closed.
            */
            toggle: function() {
                if (this.status) {
                    this.close();
                } else {
                    this.open();
                }
            }
        }
    }
    
})();


YAHOO.util.Event.onAvailable('flickr_search', function() {
    YAHOO.util.Event.on('flickr_results', 'click', function(ev) {
        var tar = YAHOO.util.Event.getTarget(ev);
        if (tar.tagName.toLowerCase() == 'img') {
            if (tar.getAttribute('fullimage', 2)) {
                var img = tar.getAttribute('fullimage', 2),
                    title = tar.getAttribute('fulltitle'),
                    owner = tar.getAttribute('fullowner'),
                    url = tar.getAttribute('fullurl');
                this.toolbar.fireEvent('flickrClick', {
                    type: 'flickrClick',
                    img: img,
                    title: title,
                    owner: owner, 
                    url: url
                });
            }
        }
    });
    oACDS = new YAHOO.widget.DS_XHR("assets/flickr_proxy.php",
        ["photo", "title", "id", "owner", "secret", "server"]);
    oACDS.scriptQueryParam = "tags";
    oACDS.responseType = YAHOO.widget.DS_XHR.TYPE_XML;
    oACDS.maxCacheEntries = 0;
    oACDS.scriptQueryAppend = "method=flickr.photos.search";

    // Instantiate AutoComplete
    oAutoComp = new YAHOO.widget.AutoComplete('flickr_search','flickr_results', oACDS);
    oAutoComp.autoHighlight = false;
    oAutoComp.alwaysShowContainer = true;     
    oAutoComp.formatResult = function(oResultItem, sQuery) {
        // This was defined by the schema array of the data source
        var sTitle = oResultItem[0];
        var sId = oResultItem[1];
        var sOwner = oResultItem[2];
        var sSecret = oResultItem[3];
        var sServer = oResultItem[4];
        var urlPart = 'http:/'+'/static.flickr.com/' + sServer + '/' + sId + '_' + sSecret;
        var sUrl = urlPart + '_s.jpg';
        var lUrl = urlPart + '_m.jpg';
        var fUrl = 'http:/'+'/www.flickr.com/photos/' + sOwner + '/' + sId;
        var sMarkup = '<img src="' + sUrl + '" fullimage="' + lUrl + '" fulltitle="' + sTitle + '" fullid="' +
            sOwner + '" fullurl="' + fUrl + '" class="yui-ac-flickrImg" title="Click to add this image to the editor"><br>';
        return (sMarkup);
    };
});
</script>




<script type="text/javascript" charset="utf-8">
	var editor = new YAHOO.widget.Editor('page_editor', {
	  height: '250px', 
		width: '600px', 
		animate: true,
		dompath: true,
		focusAtStart: true,  
		handleSubmit: true
	});
	//Wait for the editor's toolbar to load
	editor.on('toolbarLoaded', function() {
	    //create the new gutter object
	    gutter = new YAHOO.gutter();

	    //The Toolbar buttons config
	    var flickrConfig = {
	            type: 'push',
	            label: 'Insert Flickr Image',
	            value: 'flickr'
	    }

	    //Add the button to the "insertitem" group
	    editor.toolbar.addButtonToGroup(flickrConfig, 'insertitem');

	    //Handle the button's click
	    editor.toolbar.on('flickrClick', function(ev) {
	        this._focusWindow();
	        if (ev && ev.img) {
	            //To abide by the Flickr TOS, we need to link back to the image that we just inserted
	            var html = '<a href="' + ev.url + '"><img src="' + ev.img + '" title="' + ev.title + '"></a>';
	            this.execCommand('inserthtml', html);
	        }
	        //Toggle the gutter, so that it opens and closes based on this click.
	        gutter.toggle();
	    });
	    //Create the gutter control
	    gutter.createGutter();
	});
	editor._defaultToolbar.titlebar = false;
	editor._defaultToolbar.buttonType = 'advanced'
	editor.render();
</script>